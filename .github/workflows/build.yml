name: Build and Release Go Executable

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64, arm64]
        include:
          - goos: windows
            goarch: amd64
            ext: .exe
          - goos: linux
            goarch: amd64
            ext: ""
          - goos: linux
            goarch: arm64
            ext: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          cache: true
          cache-dependency-path: go.sum

      - name: Build for ${{ matrix.goos }}/${{ matrix.goarch }}
        run: |
          BINARY_NAME="modrinth-mod-updater-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}"
          echo "Building $BINARY_NAME"
          go build -v -o "$BINARY_NAME" -ldflags="-s -w" .
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}

      - name: Upload artifact ${{ matrix.goos }}/${{ matrix.goarch }}
        uses: actions/upload-artifact@v4
        with:
          name: modrinth-mod-updater-${{ matrix.goos }}-${{ matrix.goarch }}
          path: modrinth-mod-updater-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}
          if-no-files-found: error

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets

      - name: Display structure of downloaded files
        run: ls -R release-assets

      - name: Create GitHub Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: release-assets/**/*
